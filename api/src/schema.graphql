scalar Long

type Category {
   _id: Long!
   id: Int!
   name: String!
   has_restaurant: [Restaurant] @relationship(type: "HAS_RESTAURANT", direction: OUT)
}

type Location {
   _id: Long!
   address: String!
   address_extended: String
   census_block: String!
   country: String!
   cross_street: String!
   dma: String!
   formatted_address: String!
   locality: String!
   neighborhood: [String]!
   postcode: String!
   region: String!
   restaurants: [Restaurant] @relationship(type: "LOCATED_AT", direction: IN)
}

type SpatialLayer {
   _id: Long!
   ctime: Int!
   geomencoder: String!
   geomencoder_config: String!
   index_class: String!
   layer: String!
   layer_class: String!
}

type Form {
   _id: Long!
   name: String!
   mutationName: String
   mutationType: String
   has_form_page: [FormPage] @relationship(type: "HAS_FORM_PAGE", direction: OUT)
}

type FormElement {
   _id: Long!
   buttonAction: String
   buttonLabel: String
   displayOrder: Int!
   items: [String]
   limit: Int
   key: String
   text: String
   textFieldLabel: String
   textFieldPatterns: [String]
   textFieldLabelDirection: String
   type: String!
   formpages: [FormPage] @relationship(type: "HAS_FORM_ELEMENT", direction: IN)
}

type Profile {
   _id: Long!
   _id: String
   email: String!
   password: String!
   name: String
   city: String
   birthdate: String
   restaurant1: String
   restaurant2: String
   restaurant3: String
   importantFactors: [String]
   preferredTravelMethod: String
   preferredTravelDuration: Int
}

type FormPage {
   _id: Long!
   pageOrder: Int!
   has_form_element: [FormElement] @relationship(type: "HAS_FORM_ELEMENT", direction: OUT)
   forms: [Form] @relationship(type: "HAS_FORM_PAGE", direction: IN)
}

type Restaurant {
   _id: Long!
   bbox: [Float]!
   gtype: Int!
   id: String!
   lat: Float!
   long: Float!
   name: String!
   located_at: [Location] @relationship(type: "LOCATED_AT", direction: OUT)
   categorys: [Category] @relationship(type: "HAS_RESTAURANT", direction: IN)
}









